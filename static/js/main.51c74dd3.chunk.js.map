{"version":3,"sources":["components/Netflix-Logo.png","redux/actions.js","redux/reducers/fetchData.js","redux/reducers/index.js","redux/store.js","redux/selectors.js","components/List.js","components/MyList.js","index.js"],"names":["module","exports","fetchList","dispatch","type","fetch","then","res","json","error","list","mylist","recommendation","recommendations","catch","fetchError","deleteMyList","id","addToMyList","initialState","pending","combineReducers","fetchData","state","action","remove_id","remove_obj","filter","item","add_id","add_obj","loggerMiddleware","createLogger","getList","getRecommendation","getPending","getError","List","props","eventType","className","map","key","src","img","alt","title","onClick","handleClick","href","preloadedState","connect","bindActionCreators","useEffect","message","logo","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51c74dd3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Netflix-Logo.f0fb0ac0.png\";","export const FETCH_PENDING = 'FETCH_PENDING';\nexport const FETCH_ERROR = 'FETCH_ERROR';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const REMOVE_FROM_MY_LIST = \"REMOVE_FROM_MY_LIST\";\nexport const ADD_TO_MY_LIST = \"ADD_TO_MY_LIST\";\n\n\nexport function fetchPending() {\n  return {\n    type: FETCH_PENDING\n  };\n}\n\nexport function fetchError(error) {\n  return {\n    type: FETCH_ERROR,\n    error: error\n  };\n}\n\nexport function fetchSuccess(list) {\n  return {\n    type: FETCH_SUCCESS,\n    list: list.mylist,\n    recommendation: list.recommendations\n  };\n}\n\nexport function fetchList() {\n  return dispatch => {\n    dispatch(fetchPending());\n    fetch('https://4612cd5d-6a03-4ed3-b98d-572baf71b15b.mock.pstmn.io/netflix_mylist')\n    .then(res => res.json())\n    .then(res => {\n      if (res.error) {\n        throw(res.error);\n      }\n\n      dispatch(fetchSuccess(res));\n      return res;\n    })\n    .catch(error => {\n      dispatch(fetchError(error));\n    })\n  }\n}\n\nexport function deleteMyList(id) {\n  return {\n    type: REMOVE_FROM_MY_LIST,\n    id: id\n  };\n}\n\nexport function addToMyList(id) {\n  return {\n    type: ADD_TO_MY_LIST,\n    id: id\n  };\n}","import { FETCH_ERROR,\n  FETCH_PENDING,\n  FETCH_SUCCESS,\n  REMOVE_FROM_MY_LIST,\n  ADD_TO_MY_LIST } from '../actions';\n\nconst initialState = {\n  pending: false,\n  list: [],\n  recommendation: [],\n  error: null\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ERROR: {\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    }\n\n    case FETCH_PENDING: {\n      return {\n        ...state,\n        pending:true\n      };\n    }\n\n    case FETCH_SUCCESS: {\n      return {\n        ...state,\n        pending: false,\n        list: action.list,\n        recommendation: action.recommendation\n      };\n    }\n\n    case REMOVE_FROM_MY_LIST: {\n      const remove_id = action.id;\n      const remove_obj = state.list.filter(item => item.id === remove_id);\n      return {\n        ...state,\n        list: state.list.filter(item => item.id !== remove_id),\n        recommendation: [...state.recommendation, ...remove_obj]\n      };\n    }\n\n    case ADD_TO_MY_LIST: {\n      const add_id = action.id;\n      const add_obj = state.recommendation.filter(item => item.id === add_id);\n      return {\n        ...state,\n        recommendation: state.recommendation.filter(item => item.id !== add_id),\n        list: [...state.list, ...add_obj]\n      };\n    }\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport fetchData from './fetchData';\n\nexport default combineReducers(\n  {\n    fetchData,\n  }\n);","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\n  );\n}\n","export const getList = state => state.fetchData.list;\n\nexport const getRecommendation = state => state.fetchData.recommendation;\n\nexport const getPending = state => state.fetchData.pending;\n\nexport const getError = state => state.fetchData.error;","import React from \"react\";\n\nexport default function List (props) {\n  return props.eventType !== 'titleOnly' ? \n      (<div className=\"myList\">\n      {props.list.map(list => {\n        return (\n          <figure key={list.id} className=\"figure-mylist\">\n            <img src={list.img} alt={list.id} />\n            <figcaption>{list.title}</figcaption>\n            <button\n              className=\"btn\"\n              onClick={() => props.handleClick(list.id)}>\n              {props.eventType === 'delete' ? 'Remove' : 'Add'}\n            </button>\n          </figure>\n        );\n      })}\n    </div>)\n    : (props.list.map(item => <a key={item.id} href=\"/#\">{item.title}</a>))\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getList, getRecommendation, getPending, getError } from '../redux/selectors';\nimport { fetchList, deleteMyList, addToMyList } from '../redux/actions';\nimport List from './List';\nimport logo from './Netflix-Logo.png';\n\n\nfunction MyList(props) {\n  const { fetchList, list, error, recommendation, pending, deleteMyList, addToMyList } = props;\n  useEffect(() => {\n    fetchList();\n  }, [fetchList]);\n\n  if (pending) {\n    return (<p>Pending...</p>);\n  } else if (error) {\n    return (<p>Loading Error! {error.message}</p>);\n  }\n\n  return (\n    <div>\n      <div className=\"bar\">\n        <img\n          src={logo}\n          alt=\"netflix-icon\">\n        </img>\n      </div>\n      <div className=\"list-header\">\n        <h2>My List</h2>\n      </div>\n      <List list={list} handleClick={deleteMyList} eventType={'delete'}/>\n      <div className=\"list-header\">\n        <h2>Recommandation</h2>\n      </div>\n      <List list= {recommendation} handleClick={addToMyList} eventType={'add'}/>\n      <div className=\"bottom-bar\">\n        <h4 className=\"bottom-header\">My List : </h4>\n        <List list={list} eventType={'titleOnly'} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  pending: getPending(state),\n  list: getList(state),\n  recommendation: getRecommendation(state),\n  error: getError(state)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchList,\n  deleteMyList,\n  addToMyList\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyList);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport MyList from './components/MyList';\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store = {store}>\n    <MyList />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}